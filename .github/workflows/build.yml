name: Build Electron App For All Platforms

on:
  push:
    tags:
      - '*'  # Trigger only on all tags

jobs:
  build:
    name: Build Electron App
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] # The oses
        arch: [x64, arm64]
        exclude:
          - os: ubuntu-latest
            arch: arm64  # Skip ARM64 Linux if not supported
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build Electron app for ${{ matrix.os }} on ${{ matrix.arch }}
        run: |
          echo "Building for platform: ${{ matrix.os }}, arch: ${{ matrix.arch }}"
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            npm run build-l -- --arch=${{ matrix.arch }}
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            npm run build-m -- --arch=${{ matrix.arch }}
          else
            npm run build -- --arch=${{ matrix.arch }}
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            dist/*.exe
            dist/*.AppImage
            dist/*.dmg
            dist/*.deb
            dist/**/latest*.yml
            dist/*.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create Draft GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*.{exe,dmg,AppImage,deb,yml,zip}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
