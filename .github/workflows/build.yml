name: Build Electron App

on:
  push:
    branches:
      - main
    tags:
      - 'v*'        # e.g. v1.0.0 tags
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build Electron app
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-build-${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.AppImage
            dist/*.dmg

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: app-build-windows-latest
          path: ./dist/win
      - uses: actions/download-artifact@v3
        with:
          name: app-build-ubuntu-latest
          path: ./dist/linux
      - uses: actions/download-artifact@v3
        with:
          name: app-build-macos-latest
          path: ./dist/mac

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/v') }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/win/*.exe
            dist/linux/*.AppImage
            dist/mac/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
