name: Build and Release Electron App

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'    # semantic version tags

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: electron-app-${{ matrix.os }}
          path: |
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.exe

  prerelease:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only on pushes to main branch
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: electron-app-ubuntu-latest
          path: ./dist/ubuntu
      - uses: actions/download-artifact@v3
        with:
          name: electron-app-windows-latest
          path: ./dist/windows
      - uses: actions/download-artifact@v3
        with:
          name: electron-app-macos-latest
          path: ./dist/macos

      - name: Create GitHub Pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: 'prerelease-${{ github.sha }}'  # unique tag for pre-release (not actual git tag)
          name: 'Pre-release for commit ${{ github.sha }}'
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Pre-release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/ubuntu/*
            ./dist/windows/*
            ./dist/macos/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')  # only on tag push
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: electron-app-ubuntu-latest
          path: ./dist/ubuntu
      - uses: actions/download-artifact@v3
        with:
          name: electron-app-windows-latest
          path: ./dist/windows
      - uses: actions/download-artifact@v3
        with:
          name: electron-app-macos-latest
          path: ./dist/macos

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/ubuntu/*
            ./dist/windows/*
            ./dist/macos/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
